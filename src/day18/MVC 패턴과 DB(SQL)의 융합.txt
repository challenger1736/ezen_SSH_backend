MVC 패턴
        - 소프트웨어 디자인 패턴
        - 관심사 분리 : 업무의 분리와 향상된 관리

        ======================================================================

            view       : 화면 구현 UI            : 입출력 담당

                        DTO        : 데이터 이동 객체

            controller : 중계 역할               : view-model 사이 전달, 가공처리

                        DTO        : 데이터 이동 객체

            model      : 데이터.비즈니스 로직      : DAO(DB SQL)처리


            controller와 model은 싱글톤을 잘 쓴다. view는 신경 쓸 필요 없다.

        ======================================================================
                DTO        : 데이터 이동 객체
                DAO        : 데이터 접근 객체

회원가입
        화면구현     : 현재는 print랑 scanner정도
        가공/전달처리 : 비밀번호와 비밀번호 확인등의 입/출력 데이터 유효성검사, 전달
        비즈니스 로직 : 데이터 저장(SQL의 insert)


1. 회원가입을 예로들어 MVC 패턴 설계

    1. 회원가입에 들어갈 정보(DB 테이블설계) = 원본
            회원 번호
            회원 아이디
            회원 비밀번호
            회원 전화번호
            회원 가입날짜
    2. DTO 설계                       = 원본 복사본.
            회원 번호
            회원 아이디
            회원 비밀번호
            회원 전화번호
            회원 가입날짜
            + DB에 없는 필드 추가 가능   = 저장 할 필요가 없는 정보

    3. 메소드 설계 [MVC] 매개변수/ 리턴/ 메소드명

        view                                    controller                                             model

    void signup(){}                         int signup(memberDto){}                               void signup(){}
                      -----DTO----->                                      -----DTO----->
                   아이디,비밀번호,전화번호                                 유효성검사가 통과된 dto             SQL
                     //<---boolean---                                      <---boolean---
                     //true: 성공, false 실패
               <--- 혹은 int(담당자와 정하기) ----
                    0:성공,
                    1:DB오류,
                    2:아이디중복,
                    3~: 각 필드별 유효성검사 실패                                                     boolean icCheck(id){}


     void login(){}                     boolean login(memberDto){}                                  boolean login(memberDto){}
                    -------dto-------->                             -------dto-------->
                    아이디 비밀번호                                    아이디 비밀번호                        SQL
                    <-----boolean------                             <-----boolean------
                    true 로그인 성공 false 실패                        true 로그인 성공 false 실패
                                        로그인 정보(loginMno)를 받을 저장용 변수
                                                                            ---------id---------->
                                                                            <--------id-----------